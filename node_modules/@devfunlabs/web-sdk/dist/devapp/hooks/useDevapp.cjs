"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDevapp = useDevapp;
const wallet_adapter_react_1 = require("@solana/wallet-adapter-react");
const react_1 = require("react");
const devbase_1 = require("../../devbase/index.cjs");
const devapp_1 = require("../contexts/devapp.cjs");
function useDevapp() {
    const context = (0, react_1.useContext)(devapp_1.DevappContext);
    const { connection } = (0, wallet_adapter_react_1.useConnection)();
    const wallet = (0, wallet_adapter_react_1.useWallet)();
    if (context === undefined) {
        throw new Error('useDevapp must be used within a DevappProvider');
    }
    const { publicKey, signTransaction, signMessage } = wallet;
    const { appId, rpcEndpoint, devbaseEndpoint } = context;
    const devbaseClient = (0, react_1.useMemo)(() => {
        const userId = publicKey?.toBase58();
        return new devbase_1.DevbaseClient({
            baseURL: devbaseEndpoint,
            rpcEndpoint,
            appId,
            user: userId ? { id: userId, token: '' } : undefined,
            signTransaction,
            signMessage,
        });
    }, [appId, devbaseEndpoint, publicKey, rpcEndpoint, signMessage, signTransaction]);
    return {
        wallet,
        connection,
        devbaseClient,
        userWallet: publicKey?.toBase58(),
        signTransaction,
        signMessage,
    };
}
