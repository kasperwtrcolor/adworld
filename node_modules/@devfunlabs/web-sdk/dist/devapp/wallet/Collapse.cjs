"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collapse = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Collapse = ({ id, children, expanded = false }) => {
    const ref = (0, react_1.useRef)(null);
    const instant = (0, react_1.useRef)(true);
    const transition = 'height 250ms ease-out';
    const openCollapse = () => {
        const node = ref.current;
        if (!node)
            return;
        requestAnimationFrame(() => {
            node.style.height = `${node.scrollHeight}px`;
        });
    };
    const closeCollapse = () => {
        const node = ref.current;
        if (!node)
            return;
        requestAnimationFrame(() => {
            node.style.height = `${node.offsetHeight}px`;
            node.style.overflow = 'hidden';
            requestAnimationFrame(() => {
                node.style.height = '0';
            });
        });
    };
    (0, react_1.useLayoutEffect)(() => {
        if (expanded) {
            openCollapse();
        }
        else {
            closeCollapse();
        }
    }, [expanded]);
    (0, react_1.useLayoutEffect)(() => {
        const node = ref.current;
        if (!node)
            return;
        function handleComplete() {
            if (!node)
                return;
            node.style.overflow = expanded ? 'initial' : 'hidden';
            if (expanded) {
                node.style.height = 'auto';
            }
        }
        function handleTransitionEnd(event) {
            if (node && event.target === node && event.propertyName === 'height') {
                handleComplete();
            }
        }
        if (instant.current) {
            handleComplete();
            instant.current = false;
        }
        node.addEventListener('transitionend', handleTransitionEnd);
        return () => node.removeEventListener('transitionend', handleTransitionEnd);
    }, [expanded]);
    return ((0, jsx_runtime_1.jsx)("div", { className: "wallet-adapter-collapse", id: id, ref: ref, role: "region", style: { height: 0, transition: instant.current ? undefined : transition }, children: children }));
};
exports.Collapse = Collapse;
